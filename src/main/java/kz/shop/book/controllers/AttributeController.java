package kz.shop.book.controllers;


import kz.shop.book.dto.product.AttributeDTO;
import kz.shop.book.dto.product.AttributeValueDTO;
import kz.shop.book.enums.AttributeType;
import kz.shop.book.services.product.AttributeService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Arrays;
import java.util.List;

@RestController
@RequestMapping("/api/attributes")
@RequiredArgsConstructor
@CrossOrigin(origins = "*") // –†–∞–∑—Ä–µ—à–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã —Å –ª—é–±–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
public class AttributeController {

    private final AttributeService attributeService;

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    @GetMapping("/types")
    public ResponseEntity<List<AttributeType>> getAttributeTypes() {
        return ResponseEntity.ok(Arrays.asList(AttributeType.values()));
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã
    @GetMapping
    public ResponseEntity<List<AttributeDTO>> getAllAttributes() {
        return ResponseEntity.ok(attributeService.getAllAttributes());
    }

    // üîπ –ü–æ–∏—Å–∫ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –ø–æ —Ç–µ–∫—Å—Ç—É (code, nameRu, nameKz, nameEn)
    @GetMapping("/search")
    public ResponseEntity<List<AttributeDTO>> searchAttributes(@RequestParam String query) {
        return ResponseEntity.ok(attributeService.searchAttributes(query));
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç –ø–æ ID
    @GetMapping("/{id}")
    public ResponseEntity<AttributeDTO> getAttributeById(@PathVariable Long id) {
        return ResponseEntity.ok(attributeService.getAttributeById(id));
    }

    // üîπ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞—Ç—Ä–∏–±—É—Ç
    @PostMapping
    public ResponseEntity<AttributeDTO> createAttribute(@RequestBody AttributeDTO dto) {
        return ResponseEntity.ok(attributeService.createAttribute(dto));
    }

    // üîπ –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞—Ç—Ä–∏–±—É—Ç
    @PutMapping("/{id}")
    public ResponseEntity<AttributeDTO> updateAttribute(@PathVariable Long id, @RequestBody AttributeDTO dto) {
        return ResponseEntity.ok(attributeService.updateAttribute(id, dto));
    }

    // üîπ –£–¥–∞–ª–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç –ø–æ ID
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteAttribute(@PathVariable Long id) {
        attributeService.deleteAttribute(id);
        return ResponseEntity.noContent().build();
    }

    // üîπ –ù–∞–π—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç—ã –ø–æ —Ç–∏–ø—É (STRING, NUMBER, BOOLEAN, ENUM, MULTISELECT)
    @GetMapping("/type/{type}")
    public ResponseEntity<List<AttributeDTO>> findByType(@PathVariable AttributeType type) {
        return ResponseEntity.ok(attributeService.findByType(type));
    }





    // üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞
    @GetMapping("/values")
    public ResponseEntity<List<AttributeValueDTO>> getAllAttributeValues() {
        return ResponseEntity.ok(attributeService.getAllAttributeValues());
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ –ø–æ ID
    @GetMapping("/values/{id}")
    public ResponseEntity<AttributeValueDTO> getAttributeValueById(@PathVariable Long id) {
        return ResponseEntity.ok(attributeService.getAttributeValueById(id));
    }

    // üîπ –°–æ–∑–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞
    @PostMapping("/values")
    public ResponseEntity<AttributeValueDTO> createAttributeValue(@RequestBody AttributeValueDTO dto) {
        return ResponseEntity.ok(attributeService.createAttributeValue(dto));
    }

    // üîπ –û–±–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞
    @PutMapping("/values/{id}")
    public ResponseEntity<AttributeValueDTO> updateAttributeValue(@PathVariable Long id, @RequestBody AttributeValueDTO dto) {
        return ResponseEntity.ok(attributeService.updateAttributeValue(id, dto));
    }

    // üîπ –£–¥–∞–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞
    @DeleteMapping("/values/{id}")
    public ResponseEntity<Void> deleteAttributeValue(@PathVariable Long id) {
        attributeService.deleteAttributeValue(id);
        return ResponseEntity.noContent().build();
    }

    // üîπ –ù–∞–π—Ç–∏ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ –ø–æ `attributeId`
    @GetMapping("/values/attribute/{attributeId}")
    public ResponseEntity<List<AttributeValueDTO>> findByAttributeId(@PathVariable Long attributeId) {
        return ResponseEntity.ok(attributeService.findByAttributeId(attributeId));
    }

    // üîπ –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—á–µ—Ä–Ω—ã–π")
    @GetMapping("/values/search")
    public ResponseEntity<List<AttributeValueDTO>> findByValue(@RequestParam String query) {
        return ResponseEntity.ok(attributeService.findByValue(query));
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    @GetMapping("/values/public")
    public ResponseEntity<List<AttributeValueDTO>> findPublicValues() {
        return ResponseEntity.ok(attributeService.findPublicValues());
    }
}
